!function(e,r){"function"==typeof define?define([],r):"object"==typeof exports?module.exports=r():e.Dice=r()}(this,(function(){"use strict";var e=/(\d+?)d(\d+?)(.*)$/i,r=/([+-])(\d+)/i;function t(e,r){if(e=Number(e),Number.isNaN(e)||!Number.isInteger(e)||e<1)throw new Error(r);return e}function n(n){var i=function(e){return e.trim().replace(/\s+/g,"")}(n).match(e),o=0,u='Invalid dice notation "'+n+'" could not be parsed.';if(i.length<3)throw new Error('Invalid dice notation "'+n+'" could not be parsed.');if(i[3]&&r.test(i[3])){var f=i[3].match(r),a=t(f[2],u);"-"===f[1].trim()&&(a*=-1),o=a}return i[1]=t(i[1],u),i[2]=t(i[2],u),{number:i[1],type:i[2],modifier:o}}function i(e,r,i){var o="Invalid values passed to dice roller.",u={};if("string"==typeof e)u=n(e);else{if("number"!=typeof e)throw new Error(o);u={number:t(e,o),type:t(r,o),modifier:0}}"function"==typeof r&&(i=r);var f=function(e,r,t){t||(t=Math.random);for(var n=[],i=0,o=0;o<e;o++){var u;i+=u=Math.floor(t()*r)+1,n.push(u)}return{rolls:n,result:i}}(u.number,u.type,i);return f.result+=u.modifier,Object.assign(u,f),u}function o(e,r,t){return i(e,r,t).result}return Object.assign(o,{parse:n,detailed:function(e,r,t){return i(e,r,t)}}),o}));