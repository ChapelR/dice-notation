!function(r,e){"function"==typeof define?define([],e):"object"==typeof exports?module.exports=e():r.Dice=e()}(this,(function(){"use strict";var r=/(\d+)[dD](\d+)(.*)$/i,e=/([+-])(\d+)/;function t(r,e){if(r=Number(r),Number.isNaN(r)||!Number.isInteger(r)||r<1)throw new Error(e);return r}function n(n){var i=function(r){return r.trim().replace(/\s+/g,"")}(n).match(r),o=0,u="Invalid notation: "+n;if(i.length<3)throw new Error(u);if(i[3]&&e.test(i[3])){var f=i[3].match(e),a=t(f[2],u);"-"===f[1].trim()&&(a*=-1),o=a}return i[1]=t(i[1],u),i[2]=t(i[2],u),{number:i[1],type:i[2],modifier:o}}function i(r,e,i){var o="Invalid dice values.",u={};if("string"==typeof r)u=n(r);else{if("number"!=typeof r)throw new Error(o);u={number:t(r,o),type:t(e,o),modifier:0}}"function"==typeof e&&(i=e);var f=function(r,e,t){t||(t=Math.random);for(var n=[],i=0,o=0;o<r;o++){var u;i+=u=Math.floor(t()*e)+1,n.push(u)}return{rolls:n,result:i}}(u.number,u.type,i);return f.result+=u.modifier,Object.assign(u,f),u}function o(r,e,t){return i(r,e,t).result}return Object.assign(o,{parse:n,detailed:function(r,e,t){return i(r,e,t)}}),o}));